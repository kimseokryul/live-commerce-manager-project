name: CI/CD Deploy Pipeline

on:
  push:
    branches: [ develop ]

jobs:
  build-backend:
    name: Build Spring Boot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        working-directory: live-commerce-manager-backend
        run: ./gradlew build

      - name: Build Docker image for backend
        working-directory: live-commerce-manager-backend
        run: docker build -t kimseokryul/backend-app .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push backend image
        run: docker push kimseokryul/backend-app

  build-and-deploy-frontend:
    name: Build Vue App + Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: live-commerce-manager-frontend
        run: npm install

      - name: Build Vue app
        working-directory: live-commerce-manager-frontend
        run: npm run build

      - name: Build Docker image for frontend
        working-directory: live-commerce-manager-frontend
        run: docker build -t kimseokryul/frontend-app .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push frontend image
        run: docker push kimseokryul/frontend-app

      # ✅ EC2 SSH 키 복원
      - name: Restore EC2 PEM key
        run: |
          echo "$EC2_KEY" | base64 -d > ec2-key.pem
          chmod 400 ec2-key.pem
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      # ✅ EC2 서버로 SSH 접속하여 배포 스크립트 실행
      - name: Deploy on EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/live-commerce-manager-project
            git pull origin main
            docker pull kimseokryul/frontend-app
            docker pull kimseokryul/backend-app
            docker-compose down
            docker-compose up -d
          EOF
