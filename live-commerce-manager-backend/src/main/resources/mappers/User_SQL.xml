<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="org.kosa.shoppingmaillmanager.user.UserDAO">

	<!-- 검색 예비 SQL (현재는 사용되지 않음) -->
	<sql id="search">
		<if test="searchValue != null and searchValue != ''">
			WHERE userid LIKE concat(concat('%', #{searchValue}), '%')
		</if>
	</sql>

	<!-- user_id로 회원 + 호스트 정보 조회 -->
	<select id="getUser" resultType="org.kosa.shoppingmaillmanager.user.User">
		SELECT m.*,
		h.business_no, h.bank_name, h.account_no, h.channel_name,
		h.intro, h.status,  h.approved_yn
		FROM tb_member m 
		LEFT JOIN tb_host h ON m.user_id = h.user_id
		WHERE m.user_id = #{user_id}
	</select>

	<!-- 회원 기본 정보 등록 (tb_member) -->
	<insert id="insertMember">
		INSERT INTO tb_member 
		(user_id, password, name, nickname, email, phone, zipcode, address, myaddress,
		 birth_date, gender, profile_img, marketing_agree, grade_id)
		VALUES (#{user_id}, #{password}, #{name}, #{nickname}, #{email}, 
		#{phone}, #{zipcode}, #{address}, #{myaddress}, #{birth_date},
		#{gender}, #{profile_img}, #{marketing_agree}, "HOST")
	</insert>

	<!-- 호스트 추가 정보 등록 (tb_host) -->
	<insert id="insertHost">
		INSERT INTO tb_host
		(user_id, business_no, bank_name, account_no, channel_name, intro)
		VALUES (#{user_id}, #{business_no}, #{bank_name}, #{account_no}, 
		#{channel_name}, #{intro})
	</insert>

	<!-- 로그인 성공 시 마지막 로그인 시간 업데이트 -->
	<update id="setLoginTime" parameterType="String">
		UPDATE tb_member SET
			last_login = now()
		WHERE user_id = #{user_id}
	</update>

	<!-- 로그인 실패 횟수 +1 증가 -->
	<update id="increaseFailCount">
	  UPDATE tb_member SET login_fail_cnt = login_fail_cnt + 1 WHERE user_id = #{userid}
	</update>

	<!-- 로그인 실패 횟수 조회 -->
	<select id="getFailCount" resultType="java.lang.Integer">
	    SELECT COALESCE(login_fail_cnt, 0) FROM tb_member WHERE user_id = #{user_id}
	</select>

	<!-- 로그인 5회 실패 시 계정 잠금 처리 -->
	<update id="lockUser">
	    UPDATE tb_member SET status = 'N' WHERE user_id = #{user_id}
	</update>

	<!-- 로그인 성공 시 실패 횟수 초기화 + 계정 잠금 해제 -->
	<update id="resetFailCount" parameterType="String">
		UPDATE tb_member SET login_fail_cnt = 0, status = 'Y' WHERE user_id = #{user_id}
	</update>

	<!-- 이름 + 이메일로 회원 조회 -->
	<select id="findByNameAndEmail" resultType="org.kosa.shoppingmaillmanager.user.User">
	  SELECT * FROM tb_member
	  WHERE name = #{name} AND email = #{email}
	</select>

	<!-- 아이디 + 이메일로 회원 조회 -->
	<select id="findByUserIdAndEmail" resultType="org.kosa.shoppingmaillmanager.user.User">
	  SELECT * FROM tb_member
	  WHERE user_id = #{user_id} AND email = #{email}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updatePassword">
	    UPDATE tb_member SET password = #{password} WHERE user_id = #{user_id}
	</update>

	<!-- 회원 리스트 조회 (페이징 + 필터 + 정렬) -->
	<select id="getUserList" resultType="org.kosa.shoppingmaillmanager.user.UserListDTO">
		SELECT *
		FROM tb_member
		<where>
			<choose>
				<when test="filterType eq 'locked'">
					AND (
						(secession_yn = 'N' AND blacklisted = 'Y')
						OR status = 'N'
					)
				</when>
				<when test="filterType eq 'widthdrawn'">
					AND secession_yn = 'Y'
				</when>
				<otherwise>
					<if test="excludeGrades != null">
						grade_id NOT IN
						<foreach item="grade" collection="excludeGrades" open="(" separator="," close=")">
							#{grade}
						</foreach>
					</if>
					<if test="grade_id != null and grade_id != ''">
						AND grade_id = #{grade_id}
					</if>
					<if test="blacklisted != null">
						AND blacklisted = #{blacklisted}
					</if>
					<if test="status != null">
						AND status = #{status}
					</if>
					<if test="secession_yn != null">
						AND secession_yn = #{secession_yn}
					</if>
				</otherwise>
			</choose>

			<!-- 검색 조건 처리 -->
			<if test="searchValue != null and searchValue !=''">
				<choose>
					<when test="searchColumn == null or searchColumn == ''">
						AND (
							user_id LIKE CONCAT('%', #{searchValue}, '%')
							OR name LIKE CONCAT('%', #{searchValue}, '%')
							OR nickname LIKE CONCAT('%', #{searchValue}, '%')
						)
					</when>
					<when test="searchColumn == 'user_id'">
						AND user_id LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'name'">
						AND name LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchValue}, '%')
					</when>
				</choose>
			</if>
		</where>

		<!-- 정렬 처리 -->
		<choose>
			<when test="sortOption == 'created_date_desc'">
				ORDER BY created_date DESC
			</when>
			<when test="sortOption == 'created_date_asc'">
				ORDER BY created_date ASC
			</when>
			<when test="sortOption == 'user_id_desc'">
				ORDER BY user_id DESC
			</when>
			<when test="sortOption == 'user_id_asc'">
				ORDER BY user_id ASC
			</when>
			<when test="sortOption == 'name_desc'">
				ORDER BY name DESC
			</when>
			<when test="sortOption == 'name_asc'">
				ORDER BY name ASC
			</when>
			<otherwise>
				ORDER BY created_date DESC
			</otherwise>
		</choose>
		LIMIT #{size} OFFSET #{start}
	</select>

	<!-- 조건에 따른 회원 수 조회 -->
	<select id="countUserList" resultType="int">
		SELECT COUNT(DISTINCT user_id) FROM tb_member
		<where>
			<choose>
				<when test="filterType eq 'locked'">
					AND (
						(secession_yn = 'N' AND blacklisted = 'Y')
						OR status = 'N'
					)
				</when>
				<when test="filterType eq 'widthdrawn'">
					AND secession_yn = 'Y'
				</when>
				<otherwise>
					<if test="excludeGrades != null">
						grade_id NOT IN
						<foreach item="grade" collection="excludeGrades" open="(" separator="," close=")">
							#{grade}
						</foreach>
					</if>
					<if test="grade_id != null and grade_id != ''">
						AND grade_id = #{grade_id}
					</if>
					<if test="blacklisted != null">
						AND blacklisted = #{blacklisted}
					</if>
					<if test="status != null">
						AND status = #{status}
					</if>
					<if test="secession_yn != null">
						AND secession_yn = #{secession_yn}
					</if>
				</otherwise>
			</choose>

			<!-- 검색 필터 -->
			<if test="searchValue != null and searchValue !=''">
				<choose>
					<when test="searchColumn == null or searchColumn == ''">
						AND (
							user_id LIKE CONCAT('%', #{searchValue}, '%')
							OR name LIKE CONCAT('%', #{searchValue}, '%')
							OR nickname LIKE CONCAT('%', #{searchValue}, '%')
						)
					</when>
					<when test="searchColumn == 'user_id'">
						AND user_id LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'name'">
						AND name LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchValue}, '%')
					</when>
				</choose>
			</if>
		</where>

		<!-- 정렬은 의미 없음, 일단 유지 -->
	</select>

	<!-- 회원 정보 수정 (tb_member) -->
	<update id="updateUser" parameterType="org.kosa.shoppingmaillmanager.user.User">
		UPDATE tb_member
		SET
			password = #{password},
			name = #{name},
			email = #{email},
			phone = #{phone},
			zipcode = #{zipcode},
			address = #{address},
			birth_date = #{birth_date},
			gender = #{gender},
			succession_yn = #{succession_yn},
			blacklisted = #{blacklisted},
			session_date = #{session_date},
			login_fail_cnt = #{login_fail_cnt},
			status = #{status},
			last_login = #{last_login},
			marketing_agree = #{marketing_agree},
			social_id = #{social_id},
			marketing_agent = #{marketing_agent},
			grade_id = #{grade_id},
			myaddress = #{myaddress},
			secession_yn = #{secession_yn},
			secession_date = #{secession_date},
			profile_img = #{profile_img},
			social_type = #{social_type},
			nickname = #{nickname},
			updated_date = NOW()
		WHERE user_id = #{user_id};
	</update>

	<!-- 호스트 정보 수정 (tb_host) -->
	<update id="updateHost">
		UPDATE tb_host SET
			business_no = #{business_no},
			bank_name = #{bank_name},
			account_no = #{account_no},
			channel_name = #{channel_name},
			intro = #{intro},
			approved_yn = #{approved_yn}
		WHERE user_id = #{user_id}
	</update>

	<!-- 회원 탈퇴 처리 (secession_yn 및 날짜) -->
	<update id="secessionUser">
		UPDATE tb_member SET
		secession_yn = #{secession_yn},
		secession_date = NOW()
		WHERE user_id = #{user_id}
	</update>

	<!-- 호스트 ID 조회 (로그인한 유저가 호스트인지 확인용) -->
	<select id="findByHostId" resultType="int">
		SELECT h.host_id FROM tb_host h 
		JOIN tb_member m ON h.user_id = m.user_id
		WHERE m.user_id = #{user_id}
	</select>

	<!-- 블랙리스트 상태 일괄 업데이트 -->
	<update id="updateBlacklistStatus">
		UPDATE tb_member
		SET blacklisted = #{blacklisted}
		WHERE user_id IN
		<foreach collection="userIds" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!-- 계정 잠금 상태 일괄 업데이트 -->
	<update id="updateUnlockStatus">
		UPDATE tb_member
		SET status = #{status}
		WHERE user_id IN
		<foreach collection="userIds" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!-- 전체 회원 수 조회 (대시보드용) -->
	<select id="countTotalMembers" resultType="int">
		SELECT COUNT(*) FROM tb_member
	</select>

	<!-- 오늘 가입한 회원 수 조회 (대시보드용) -->
	<select id="countTodayNewMembers" resultType="int">
		SELECT COUNT(*) FROM tb_member WHERE DATE(created_date) = CURRENT_DATE
	</select>

	<!-- 전체 호스트 수 조회 (대시보드용) -->
	<select id="countTotalHosts" resultType="int">
		SELECT COUNT(*) FROM tb_host
	</select>
</mapper>
